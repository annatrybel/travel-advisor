version: '3.8'

networks:
  dev:
    driver: bridge
    
volumes:
  db-data:          
  shared-volume:   

services:
  db:
    container_name: postgres
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: travel_advisor_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d travel_advisor_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - dev
    restart: unless-stopped

  travel_advisor:
    depends_on:
      db:
        condition: service_healthy
    image: travel_advisor-web
    container_name: travel_advisor_container
    environment:
      - ConnectionStrings__Database=User ID=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Host=db;Port=5432;Database=travel_advisor_db;Pooling=true;
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
    build:
      context: .
      dockerfile: Travel-Advisor/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
    ports:
      - "5000:8080"
      - "5001:8081"
    volumes:
      - shared-volume:/shared/volume
    networks:
      - dev